#!/bin/bash
# Depuis 11/01 les includes hors gestion de conf
# Creation d'un sous repertoire contenant un lien vers tous les includes
[ "$TRUST_ROOT" = "" ] && echo "Initialize TRUST environment" && exit -1
echo "Updating $TRUST_ROOT/include directory..."
# Creation de ce qui n'existe peut etre pas :
cd $TRUST_ROOT
INC=$TRUST_ROOT/include && [ ! -d $INC ] && mkdir $INC 2>/dev/null
cd $INC
mkdir -p $INC/backward
# includes for external libs eos and coolprop
mkdir -p $INC/EOS $INC/CoolProp

# Ajout des fichiers deprecated by TRUST 1.9.0:
for file in ArrOfDouble.h ArrOfInt.h DoubleVect.h IntVect.h DoubleTab.h IntTab.h DoubleTrav.h IntTrav.h DoubleList.h IntList.h DoubleLists.h IntLists.h Champ_Tabule_Morceaux.h ConstDoubleTab_parts.h
do
echo "#error File $file deprecated in TRUST 1.9.0. You SHOULD change the include. See TRUST_ROOT/DEVELOPER_NOTES for more information" > backward/$file
done

# Ajout des fichiers deprecated by TRUST 1.9.1:
for file in ArrOfFloat.h FloatTab.h 
do
echo "#error File $file deprecated in TRUST 1.9.1. You SHOULD change the include. See TRUST_ROOT/DEVELOPER_NOTES for more information" > backward/$file
done

# Ajout des fichiers deprecated by TRUST 1.9.2:
Deprecated_includes_v192="TriouError.h Ref_.h Ref.h MacRef.h liste.h Deriv_.h O_U_Ptr.h MacDeriv.h List.h MacList.h Vect_MD_Vector.h Vect_impl.h MacVect.h Ref_Zone_Cl_dis.h Zone_Cl_PolyMAC.h Zone_EF.h Ref_Zone_Cl_VEFP1B.h Sous_zone_dis_base.h Zone_VEF.h Ref_Zone_VEF.h Zone_EF_axi.h Ref_Zone_Poly_base.h Ref_Zone_Cl_VDF.h Zones_dis.h Ref_Zone_PolyMAC.h Zone_VDF.h List_Ref_Sous_Zone.h Zone_VF_inst.h Ref_Zone_VEF_PreP1b.h Ref_Sous_zone_VF.h Zone_PolyMAC_P0.h Ref_Zone_EF.h Octree_Zone.h Ref_Zone_dis.h Sous_zones_dis.h Zone_Cl_EF.h Zone_dis_base.h Ref_Zone_Cl_VEF.h Zone_PolyMAC.h Zones.h Sous_Zone.h Partitionneur_Sous_Zones.h Zone_Cl_VEF.h Zone_Cl_dis_base.h Ref_Sous_Zone.h Ref_Zone_VF.h Zone_dis.h Ref_Zone_dis_base.h Ref_Zone_PolyMAC_P0.h Sous_zone_dis.h Zone_Cl_dis.h Zone_VEF_PreP1b.h Ref_Zone_Cl_PolyMAC.h Create_domain_from_sous_zone.h Zone.h Zone_Cl_VEFP1B.h Ref_Zone_Cl_dis_base.h Sous_zone_VF.h Ref_Zone.h Deriv_Zone.h Zone_Cl_VDF.h Ref_Zone_VDF.h Zone_VF.h Ref_Zone_Cl_EF.h Zone_Poly_base.h LireMEDfile.h Format_Post_Medfile.h EcrMEDfile.h"
for file in $Deprecated_includes_v192
do
echo "#error File $file deprecated in TRUST 1.9.2. You SHOULD change the include. See TRUST_ROOT/DEVELOPER_NOTES for more information" > backward/$file
done
file="Create_domain_from_sous_zone.h"
echo "#error File $file deprecated in TRUST 1.9.2. You SHOULD change the include to Create_domain_from_sub_domain.h" > backward/$file
file="Faces_Interne.h"
echo "#error File $file deprecated in TRUST 1.9.2. You SHOULD change the include to Bord_Interne.h" > backward/$file
file="trust_med_utils.h"
echo "#error File $file deprecated in TRUST 1.9.4. You SHOULD change the include to TRUST_2_MED.h" > backward/$file
file="EcrMED.h"
echo "#error File $file deprecated in TRUST 1.9.4. You SHOULD change the include to Ecrire_MED.h" > backward/$file

# EOS includes in EOS if 
if [ "$TRUST_EOS_HOME_DIR" != "" ]
then
    ln -nsf $TRUST_EOS_HOME_DIR/include/EOS EOS/.
    ln -nsf $TRUST_EOS_HOME_DIR/include/Common EOS/.
    ln -nsf $TRUST_EOS_HOME_DIR/include/Language EOS/.
    echo "#define HAS_EOS" > EOS/eos++.h
    echo "TRUST configured with the EOS library found in $TRUST_EOS_HOME_DIR"
    echo "EOS header files added in $TRUST_ROOT/include/EOS !"
else
    echo "TRUST not configured with EOS. Cleaning include/EOS ..."
    #rm -rf EOS/*
    echo "#undef HAS_EOS" > $TRUST_TMP/eos++.h.tmp
    [ "`diff EOS/eos++.h $TRUST_TMP/eos++.h.tmp 1>/dev/null 2>/dev/null; echo $?`" != 0 ] && rm -rf EOS/* && cp $TRUST_TMP/eos++.h.tmp EOS/eos++.h
    rm $TRUST_TMP/eos++.h.tmp
fi

# CoolProp includes in CoolProp if 
if [ "$TRUST_COOLPROP_HOME_DIR" != "" ]
then
    ln -nsf $TRUST_COOLPROP_HOME_DIR/include/* CoolProp/.
    if [ -d $TRUST_COOLPROP_HOME_DIR/externals/fmtlib/include/fmt ]
    then
       # CoolProp 6.5.0
       ln -nsf $TRUST_COOLPROP_HOME_DIR/externals/fmtlib/include/fmt CoolProp/.
    elif [ -d $TRUST_COOLPROP_HOME_DIR/externals/fmtlib/fmt ]
    then
       # CoolProp < 6.4 ?
       ln -nsf $TRUST_COOLPROP_HOME_DIR/externals/fmtlib/fmt CoolProp/.
    else
      echo "fmtlib is no more a prerequis for CoolProp?"
    fi
    echo "#define HAS_COOLPROP" > CoolProp/coolprop++.h
    echo "TRUST configured with the CoolProp library found in $TRUST_COOLPROP_HOME_DIR"
    echo "CoolProp header files added in $TRUST_ROOT/include/CoolProp !"
else
    echo "TRUST not configured with CoolProp. Cleaning include/CoolProp ..."
    #rm -rf CoolProp/*
    echo "#undef HAS_COOLPROP" > $TRUST_TMP/coolprop++.h.tmp
    [ "`diff CoolProp/coolprop++.h $TRUST_TMP/coolprop++.h.tmp 1>/dev/null 2>/dev/null; echo $?`" != 0 ] && rm -rf CoolProp/* && cp $TRUST_TMP/coolprop++.h.tmp CoolProp/coolprop++.h
fi

# Kokkos tag:
kokkos_hdr=$TRUST_ROOT/src/Kernel/Utilitaires/kokkos++.h
if [ "$TRUST_USE_KOKKOS" = "1" ]; then
    echo "#define KOKKOS_" > $TRUST_TMP/kokkos++.h
else
    echo "#undef KOKKOS_" > $TRUST_TMP/kokkos++.h
fi
#    Update only if different than existing to avoid re-compilation at each configure:
if [ ! -f $kokkos_hdr ] || diff $kokkos_hdr $TRUST_TMP/kokkos++.h 1>/dev/null; then
    cp $TRUST_TMP/kokkos++.h $kokkos_hdr
fi

# Ouverture de $INC
echo "s?$MPI_INCLUDE/mpi\.h?\$(MPI_INCLUDE)/mpi\.h?g">.tmp
echo "s?$METIS_ROOT/include/metis\.h?\$(METIS_ROOT)/include/metis\.h?g">>.tmp
echo "s?$TRUST_LATAFILTER/include/?\$(TRUST_LATAFILTER)/include/?g">>.tmp
echo "s?$TRUST_ICOCOAPI/include/?\$(TRUST_ICOCOAPI)/include/?g">>.tmp
echo "s?$TRUST_MED_ROOT/include/?\$(TRUST_MED_ROOT)/include/?g">>.tmp
echo "s?$TRUST_MEDCOUPLING_ROOT/include/?\$(TRUST_MEDCOUPLING_ROOT)/include/?g">>.tmp
echo "s?$TRUST_OSQP_ROOT/include/?\$(TRUST_OSQP_ROOT)/include/?g">>.tmp
echo "s?$PETSC_ROOT/$TRUST_ARCH$OPT/include/?\$(PETSC_ROOT)/\$(TRUST_ARCH)\$(OPT)/include/?g">>.tmp
echo > .tmp1
num=""
for dir in `cat $TRUST_ENV/rep.TRUST`; do
 for ext in .h .tpp .hpp; do
   dir=${dir#./}
   lh=`cd $TRUST_ROOT/$dir;ls *$ext 2>/dev/null`
   if [ ${#lh} != 0 ]
   then
      [ "`cat .tmp$num | wc -l`" -gt 900 ] && num=1
      for file in $lh
      do
         ff=${file%$ext}
         echo "s?include/$ff\$ext?$dir/$ff\$ext?g" >> .tmp$num
         if [ ! -L $file ] || [ "`ls -la $file | $TRUST_Awk '{print $NF}'`" != "../$dir/$file" ]
         then
            ln -sf ../$dir/$file $file 2>/dev/null
         fi
      done
   fi
 done
done

# Supprime les liens inutiles
for file in `find . -name '*'.h -print -o -name '*'.tpp -print -o -name '*'.hpp -print`
do
   [ ! -f $file ] && rm -f $file
done

