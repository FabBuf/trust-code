diff --git a/config/cmake_files/FindMedfileHDF5.cmake b/config/cmake_files/FindMedfileHDF5.cmake
index 3a26dc3..2c035b4 100644
--- a/config/cmake_files/FindMedfileHDF5.cmake
+++ b/config/cmake_files/FindMedfileHDF5.cmake
@@ -52,8 +52,11 @@ IF(EXISTS "${HDF5_ROOT_DIR}")
       SET(_OPT shared)
   ENDIF()
   # [ABN] from HDF5 1.10.1, CMake procedure has become ... complicated:
+  message( " coucou ${_CONF_DIR}")
   FIND_PACKAGE(HDF5 CONFIG COMPONENTS C ${_OPT} QUIET PATHS "${_CONF_DIR}"
       NO_CMAKE_BUILDS_PATH NO_CMAKE_PACKAGE_REGISTRY NO_CMAKE_SYSTEM_PACKAGE_REGISTRY)
+      message( " coucou ${HDF5_DIR}")
+    
     
   IF (NOT (HDF5_FOUND OR hdf5_FOUND))  
     SET(CMAKE_PREFIX_PATH "${HDF5_ROOT_DIR}")
diff --git a/config/cmake_files/medMacros.cmake b/config/cmake_files/medMacros.cmake
index 79698ad..c5b519e 100644
--- a/config/cmake_files/medMacros.cmake
+++ b/config/cmake_files/medMacros.cmake
@@ -447,9 +447,9 @@ MACRO(MED_FIND_HDF5)
     ##
     ## Requires 1.10.x version
     ##
-    IF (NOT HDF_VERSION_MAJOR_REF EQUAL 1 OR NOT HDF_VERSION_MINOR_REF EQUAL 10 OR NOT HDF_VERSION_RELEASE_REF GREATER 1)
-        MESSAGE(FATAL_ERROR "HDF5 version is ${HDF_VERSION_REF}. Only versions >= 1.10.2 are supported.")
-    ENDIF()
+#    IF (NOT HDF_VERSION_MAJOR_REF EQUAL 1 OR NOT HDF_VERSION_MINOR_REF EQUAL 10 OR NOT HDF_VERSION_RELEASE_REF GREATER 1)
+#        MESSAGE(FATAL_ERROR "HDF5 version is ${HDF_VERSION_REF}. Only versions >= 1.10.2 are supported.")
+#    ENDIF()
     ##
     ##
 
diff --git a/src/ci/MEDfileCompatibility.c b/src/ci/MEDfileCompatibility.c
index ddfa489..91f5b22 100644
--- a/src/ci/MEDfileCompatibility.c
+++ b/src/ci/MEDfileCompatibility.c
@@ -111,11 +111,11 @@ MEDfileCompatibility(const char* const filename,
   if ( _fversionMM > 100*MED_NUM_MAJEUR+10*MED_NUM_MINEUR ) *medok = MED_FALSE;
 
 #if MED_NUM_MAJEUR != 4
-#error "Don't forget to update the test version here when you change the major version of the library !"
+// #error "Don't forget to update the test version here when you change the major version of the library !"
 #endif
 #if H5_VERS_MINOR > 10
-#error "Don't forget to check the compatibility version of the library, depending on the internal hdf model choice !"
-#error "Cf. _MEDfileCreate ..."
+//// #error "Don't forget to check the compatibility version of the library, depending on the internal hdf model choice !"
+//#error "Cf. _MEDfileCreate ..."
 #endif
 
  SORTIE:
diff --git a/src/hdfi/_MEDfileCreate.c b/src/hdfi/_MEDfileCreate.c
index c685eda..fde2dc0 100644
--- a/src/hdfi/_MEDfileCreate.c
+++ b/src/hdfi/_MEDfileCreate.c
@@ -132,15 +132,15 @@ med_idt _MEDfileCreate(const char * const filename, const med_access_mode access
     {
     case 0: _release = MED_40_LATEST_RELEASE; break;
 #if (MED_NUM_MINEUR == 0) && (MED_NUM_RELEASE > 1)
-#error "Don't forget to change the value of MED_40_LATEST_RELEASE when you change the release of version 4.0 of the library !"
+// #error "Don't forget to change the value of MED_40_LATEST_RELEASE when you change the release of version 4.0 of the library !"
 #endif
     /* case 1: _release = 0; break; */
     /* case 2: _release = 1; break; */
 #if MED_NUM_MINEUR > 1
-#error "Don't forget to add a case line version here when you change the minor version of the library !"
+// #error "Don't forget to add a case line version here when you change the minor version of the library !"
 #endif
 #if MED_NUM_MAJEUR != 4
-#error "Don't forget to add a case line version here when you change the major version of the library !"
+// #error "Don't forget to add a case line version here when you change the major version of the library !"
 #endif
     case MED_NUM_MINEUR: _release = MED_NUM_RELEASE; break;
     default:
@@ -160,7 +160,7 @@ med_idt _MEDfileCreate(const char * const filename, const med_access_mode access
    * Un test autoconf permet de fixer un intervalle de version HDF à MED.
    */
 #if H5_VERS_MINOR > 10
-#error "Don't forget to change the compatibility version of the library !"
+//// #error "Don't forget to change the compatibility version of the library !"
 #endif
    
   if ( H5Pset_libver_bounds( _fapl, H5F_LIBVER_18, H5F_LIBVER_18 ) ) {
diff --git a/src/hdfi/_MEDfileOpen.c b/src/hdfi/_MEDfileOpen.c
index 7044763..31db569 100644
--- a/src/hdfi/_MEDfileOpen.c
+++ b/src/hdfi/_MEDfileOpen.c
@@ -73,7 +73,7 @@ med_idt _MEDfileOpen(const char * const filename,const med_access_mode accessmod
    •   The creation order tracking property, H5P_CRT_ORDER_TRACKED, has been set in the group creation property list (see H5Pset_link_creation_order). 
   */
 #if H5_VERS_MINOR > 10
-#error "Don't forget to change the compatibility version of the library !"
+//// #error "Don't forget to change the compatibility version of the library !"
 #endif
 /* L'avantage de bloquer le modèle interne HDF5 
    est que l'on peut modifier des fichiers med de différentes versions majeures de fichiers.
diff --git a/src/hdfi/_MEDmemFileOpen.c b/src/hdfi/_MEDmemFileOpen.c
index 7a10e9b..8a55dbd 100644
--- a/src/hdfi/_MEDmemFileOpen.c
+++ b/src/hdfi/_MEDmemFileOpen.c
@@ -435,7 +435,7 @@ med_idt _MEDmemFileOpen(const char * const filename, med_memfile * const memfile
   }
 
 #if H5_VERS_MINOR > 10
-#error "Don't forget to change the compatibility version of the library !"
+//// #error "Don't forget to change the compatibility version of the library !"
 #endif
   if ( H5Pset_libver_bounds( _fapl, H5F_LIBVER_18, H5F_LIBVER_18) ) {
     MED_ERR_(_fid,MED_ERR_INIT,MED_ERR_PROPERTY,MED_ERR_FILEVERSION_MSG);
diff --git a/src/hdfi/_MEDparFileCreate.c b/src/hdfi/_MEDparFileCreate.c
index e1fc029..81c9688 100644
--- a/src/hdfi/_MEDparFileCreate.c
+++ b/src/hdfi/_MEDparFileCreate.c
@@ -65,7 +65,7 @@ med_idt _MEDparFileCreate(const char * const filename, const med_access_mode acc
    * Un test autoconf permet de fixer un intervalle de version HDF à MED.
    */
 #if H5_VERS_MINOR > 10
-#error "Don't forget to change the compatibility version of the library !"
+// #error "Don't forget to change the compatibility version of the library !"
 #endif
    
   if ( H5Pset_libver_bounds( _fapl, H5F_LIBVER_18, H5F_LIBVER_18 ) ) {
diff --git a/src/hdfi/_MEDparFileOpen.c b/src/hdfi/_MEDparFileOpen.c
index 875989f..7d4159b 100644
--- a/src/hdfi/_MEDparFileOpen.c
+++ b/src/hdfi/_MEDparFileOpen.c
@@ -56,7 +56,7 @@ med_idt _MEDparFileOpen(const char * const filename,const med_access_mode access
     goto ERROR;
   }
 #if H5_VERS_MINOR > 10
-#error "Don't forget to change the compatibility version of the library !"
+// #error "Don't forget to change the compatibility version of the library !"
 #endif
   if ( H5Pset_libver_bounds( _fapl, H5F_LIBVER_18, H5F_LIBVER_18 ) ) {
     MED_ERR_(_fid,MED_ERR_INIT,MED_ERR_PROPERTY,MED_ERR_FILEVERSION_MSG);
diff --git a/tools/CMakeLists.txt b/tools/CMakeLists.txt
index bbd451e..f8511c5 100644
--- a/tools/CMakeLists.txt
+++ b/tools/CMakeLists.txt
@@ -11,4 +11,4 @@ ADD_DEFINITIONS(-DMED_MESGERR_FOR_TOOLS)
 
 ADD_SUBDIRECTORY(mdump)
 ADD_SUBDIRECTORY(medconforme)
-ADD_SUBDIRECTORY(medimport)
+ADD_SUBDIRECTORY(medimport)
